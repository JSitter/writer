<?php

/**
 * Implements hook_permission().
 * Set Permission Definitions.
 */
function writer_permission() {
    $permissions = array(
        'edit_writer_settings' => array(
            'title' => t("Edit writer settings"),
        ),
    );
}

/**
 * Implements hook_menu().
 * Creates menu items and routes.
 */
function writer_menu() {
    $menu_items = array();

    $menu_items['writer/test'] = array(
        'title' => t("test route"),
        'page callback' => 'writer_test_route',
        'access arguments' => array('edit_writer_settings')
    );

    return $menu_items;
}

function writer_test_route() {
    $html = "<h2>Hello Test</h2>";
    return $html;
}

/**
 * Implements hook_field_formatter_view().
 * Implementation of markdown editor field.
 * 
 * @see writer_field_formatter_info()
 */
function writer_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
    $element = array();
    dpm("Hello formatter view");
    switch ($display['type']) {
        // This formatter simply outputs the field as field input.
        case 'field_example_simple_text':
          foreach ($items as $delta => $item) {
            $element[$delta] = array(
              // See theme_head_tag().
              '#type' => 'head_tag',
              '#tag' => 'p',
              '#attributes' => array(
                'style' => 'color: ' . $item['rgb'],
              ),
              '#value' => t('This is #value data :)'),
            );
          }
          break;
      }
    
      return $element;
}

/**
 * Implements hook_field_widget_info().
 */
function writer_field_widget_info() {
    return array(
        'field_example_text' => array(
          'label' => t('Test text widget :)'),
          'field types' => array('text_long'),
        ),
      );
}

/**
 * Implements hook_field_widget_form().
 */
function writer_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
    dpm($form_state);
    // $value = isset($items[$delta]['field_test_text_long']) ? $items[$delta]['field_test_text_long'] : '';
    dpm($field);
    dpm($items);
    dpm($delta);
    $value = isset($items[$delta]['value']) ? $items[$delta]['value'] : '';
    $widget = $element;
    $widget['#delta'] = $delta;

    switch ($instance['widget']['type']) {

        case 'field_example_text':
        $widget += array(
            '#type' => 'textarea',
            '#prefix' => "<div id='writer-block'>",
            '#suffix' => "</div>",
            '#default_value' => $value,
            // Allow a slightly larger size that the field length to allow for some
            // configurations where all characters won't fit in input field.

            );
          break;
      }
    
      $element['value'] = $widget;
      return $element;    
}

/**
 * Validate Markdown block
 * Implements hook_validate().
 */
// function writer_field_example_text_validate($element, &$form_state) {
//     $delta = $element['#delta'];
//     dpm($element);
//     $field = $form_state['field'][$element['#field_name']][$element['#language']]['field'];
//     dpm($form_state);

//     form_set_value($element, $value, $form_state);

// }
